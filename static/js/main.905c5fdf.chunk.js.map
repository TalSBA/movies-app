{"version":3,"sources":["Components/ActorCard.js","Model/ActorModel.js","Pages/Actors.js","Components/SearchBox.js","Model/MovieModel.js","Components/MovieCard.js","Pages/Movies.js","Pages/Home.js","Components/Menu.js","App.js","index.js"],"names":["ActorCard","actor","Card","className","border","Img","variant","src","image","Body","Title","href","imdbLink","target","firstName","lastName","Text","Age","ActorModel","birthday","this","id","Date","getTime","getFullYear","Actors","props","actorCards","useState","filterText","setFilterText","sortProperty","setSortBy","actors","setActors","sortActorsBy","e","value","useEffect","setTimeout","axios","get","then","response","data","map","catch","error","console","filter","toLowerCase","includes","sort","actor1","actor2","actor1Prop","actor2Prop","Container","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","Form","Check","name","type","label","Row","length","Spinner","animation","SearchBox","searchText","onSearchChange","results","onResultSelected","Control","ListGroup","result","index","Item","action","onClick","MovieModel","movieName","duration","poster","director","mainStars","plot","MovieCard","movie","star","style","background","Movies","movies","setMovies","setSearchText","setResults","newSearchText","searchMovieURL","original_title","resultIndex","getDetailsURL","getCreditsURL","promise1","promise2","Promise","all","responses","details","credits","concat","runtime","poster_path","crew","cast","overview","Col","lg","md","Home","Menu","items","redirectTo","to","Navbar","bg","Brand","Nav","item","Link","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.905c5fdf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nfunction ActorCard({ actor }) {\r\n  return (\r\n    <Card className=\"actorCard\" border=\"warning\">\r\n      <Card.Img variant=\"top\" src={actor.image} />\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <a href={actor.imdbLink} target=\"_blank\">\r\n            {actor.firstName + \" \" + actor.lastName}\r\n          </a>\r\n        </Card.Title>\r\n        <Card.Text>Age: {actor.Age()}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ActorCard;\r\n","class ActorModel {\r\n  constructor(firstName, lastName, birthday, image, imdbLink) {\r\n    this.id = new Date().getTime();\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.birthday = birthday;\r\n    this.image = image;\r\n    this.imdbLink = imdbLink;\r\n  }\r\n\r\n  Age() {\r\n    const currentYear = new Date().getFullYear();\r\n    const age = currentYear - new Date(this.birthday).getFullYear();\r\n    return age;\r\n  }\r\n}\r\n\r\nexport default ActorModel;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  InputGroup,\r\n  Row,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport ActorCard from \"../Components/ActorCard\";\r\nimport ActorModel from \"../Model/ActorModel\";\r\n\r\nimport \"../Styles/Actors.css\";\r\n\r\nfunction Actors(props) {\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [sortProperty, setSortBy] = useState(\"firstName\");\r\n  const [actors, setActors] = useState(null);\r\n\r\n  //we want to fetch the actors data from JSON only once the component is mounting\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      axios\r\n        .get(\"actors.json\")\r\n        .then((response) => {\r\n          setActors(\r\n            response.data.map(\r\n              (actor) =>\r\n                new ActorModel(\r\n                  actor.firstName,\r\n                  actor.lastName,\r\n                  actor.birthday,\r\n                  actor.image,\r\n                  actor.imdbLink\r\n                )\r\n            )\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }, 3000);\r\n  }, []);\r\n\r\n  function sortActorsBy(e) {\r\n    setSortBy(e.target.value);\r\n  }\r\n  function filterActors(e) {\r\n    setFilterText(e.target.value);\r\n  }\r\n  let actorCards;\r\n  if (actors) {\r\n    actorCards = actors\r\n      .filter((actor) => {\r\n        return (\r\n          actor.firstName.toLowerCase().includes(filterText.toLowerCase()) ||\r\n          actor.lastName.toLowerCase().includes(filterText.toLowerCase())\r\n        );\r\n      })\r\n      .sort((actor1, actor2) => {\r\n        let actor1Prop = actor1[sortProperty];\r\n        let actor2Prop = actor2[sortProperty];\r\n        if (sortProperty == \"age\") {\r\n          actor1Prop = actor1.Age();\r\n          actor2Prop = actor2.Age();\r\n        }\r\n        if (actor2Prop > actor1Prop) {\r\n          return -1;\r\n        } else if (actor1Prop > actor2Prop) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })\r\n      .map((actor) => (\r\n        <ActorCard key={actor.id + actor.imdbLink} actor={actor} />\r\n      ));\r\n  }\r\n  return (\r\n    <Container className=\"p-actors\">\r\n      <h1 className=\"title\">Actors Gallery</h1>\r\n      <InputGroup className=\"input-filter\">\r\n        <FormControl\r\n          placeholder=\"Filter by First Name and Last Name\"\r\n          aria-label=\"Filter by First Name and Last Name\"\r\n          aria-describedby=\"basic-addon2\"\r\n          onChange={filterActors}\r\n        />\r\n      </InputGroup>\r\n      <Form className=\"sortBy\">\r\n        <span>Sort By:</span>\r\n        <div key={\"inline-radio\"} className=\"mb-3\">\r\n          <Form.Check\r\n            className=\"radioOpt\"\r\n            name=\"radio\"\r\n            type=\"radio\"\r\n            value=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={sortActorsBy}\r\n          />\r\n          <Form.Check\r\n            className=\"radioOpt\"\r\n            name=\"radio\"\r\n            type=\"radio\"\r\n            value=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={sortActorsBy}\r\n          />\r\n          <Form.Check\r\n            className=\"radioOpt\"\r\n            name=\"radio\"\r\n            type=\"radio\"\r\n            value=\"age\"\r\n            label=\"Age\"\r\n            onChange={sortActorsBy}\r\n          />\r\n        </div>\r\n      </Form>\r\n\r\n      {actors ? (\r\n        <Row>{actorCards && actorCards.length > 0 ? actorCards : \"\"}</Row>\r\n      ) : (\r\n        <Spinner className=\"spinner\" animation=\"grow\" variant=\"warning\" />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Actors;\r\n","import React from \"react\";\r\nimport { Form, ListGroup } from \"react-bootstrap\";\r\nimport \"../Styles/SearchBox.css\";\r\n\r\nfunction SearchBox({ placeholder, searchText, onSearchChange, results, onResultSelected }) {\r\n  return (\r\n    <div className=\"c-searchBox\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={searchText}\r\n        onChange={(e) => onSearchChange(e.target.value)}\r\n      />\r\n      <ListGroup className=\"result-box\">\r\n        {results.map((result, index) => (\r\n          <ListGroup.Item key={index} action onClick={() => onResultSelected(index)}>{result}</ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","class MovieModel {\r\n    constructor(movieName, duration, poster, director, mainStars, plot) {\r\n      this.movieName = movieName;\r\n      this.duration = duration;\r\n      this.poster = \"https://image.tmdb.org/t/p/w500\" + poster;\r\n      this.director = director;\r\n      this.mainStars = mainStars;\r\n      this.plot = plot;\r\n    }\r\n}\r\n\r\nexport default MovieModel;\r\n","import React from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport \"../Styles/MovieCard.css\";\r\n\r\nfunction MovieCard({ movie }) {\r\n  return (\r\n    // <Card className=\"movieCard\" border=\"warning\">\r\n    //   <Card.Img src={movie.poster} />\r\n    //   <Card.Body>\r\n    //     <Card.Title>{movie.movieName}</Card.Title>\r\n    //     <Card.Text>{movie.plot}</Card.Text>\r\n    //   </Card.Body>\r\n    //   <Card.Body>\r\n    //     <span className=\"bold-title\">Run Time: </span>\r\n    //     <cite title=\"Source Title\">{movie.duration} </cite>\r\n    //     <br />\r\n    //     <span className=\"bold-title\">Director: </span>{\" \"}\r\n    //     <cite title=\"Source Title\">{movie.director}</cite>\r\n    //     <br />\r\n    //     <span className=\"bold-title\">Stars: </span>{\" \"}\r\n    //     <cite title=\"Source Title\">{movie.mainStars}</cite>\r\n    //   </Card.Body>\r\n    // </Card>\r\n    <div className=\"movie_card\" id=\"bright\">\r\n      <div className=\"info_section\">\r\n        <div className=\"movie_header\">\r\n          <img className=\"locandina\" src={movie.poster} />\r\n          <h1>{movie.movieName}</h1>\r\n          <h4>By {movie.director}</h4>\r\n          <span className=\"minutes\">{movie.duration} min</span>\r\n          {/* <p className=\"type\">Action, Crime, Fantasy</p> */}\r\n        </div>\r\n        <div className=\"movie_desc\">\r\n          <p className=\"text\">{movie.plot}</p>\r\n        </div>\r\n        <div className=\"movie_social\">\r\n          <ul>\r\n            {movie.mainStars.map((star,index) => (\r\n              <li key={index}>{star}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"blur_back\"\r\n        style={{ background: `url(${movie.poster})` }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport MovieModel from \"../Model/MovieModel\";\r\nimport MovieCard from \"../Components/MovieCard\";\r\nimport \"../Styles/Movies.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction Movies(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  let movieDetails;\r\n  let movieCredits;\r\n\r\n  function handleSearchChange(newSearchText) {\r\n    setSearchText(newSearchText);\r\n    if (newSearchText) {\r\n      const searchMovieURL =\r\n        \"https://api.themoviedb.org/3/search/movie?api_key=396cbe7ed4649f8d87456e09437c030b&query=\" +\r\n        newSearchText;\r\n      axios.get(searchMovieURL).then((response) => {\r\n        setResults(response.data.results);\r\n      });\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  }\r\n\r\n  function AddMovie(resultIndex) {\r\n    const getDetailsURL = `https://api.themoviedb.org/3/movie/${results[resultIndex].id}?api_key=396cbe7ed4649f8d87456e09437c030b`;\r\n    const getCreditsURL = `https://api.themoviedb.org/3/movie/${results[resultIndex].id}/credits?api_key=396cbe7ed4649f8d87456e09437c030b`;\r\n    const promise1 = axios.get(getDetailsURL);\r\n    const promise2 = axios.get(getCreditsURL);\r\n\r\n    Promise.all([promise1, promise2]).then((responses) => {\r\n      const details = responses[0].data;\r\n      const credits = responses[1].data;\r\n\r\n      setMovies(\r\n        movies.concat(\r\n          new MovieModel(\r\n            results[resultIndex].original_title,\r\n            details.runtime,\r\n            results[resultIndex].poster_path,\r\n            credits.crew[1].name,\r\n            [credits.cast[0].name, credits.cast[1].name, credits.cast[2].name],\r\n            details.overview\r\n          )\r\n        )\r\n      );\r\n      setSearchText(\"\");\r\n      setResults([]);\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"p-movies\">\r\n      <Container>\r\n        <SearchBox\r\n          placeholder=\"Add Movie...\"\r\n          searchText={searchText}\r\n          onSearchChange={handleSearchChange}\r\n          results={results.map((result) => result.original_title)}\r\n          onResultSelected={AddMovie}\r\n        />\r\n        <Row>\r\n          {movies.map((movie, index) => (\r\n            <Col key={index} lg={6} md={7}>\r\n              <MovieCard key={index} movie={movie} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"../Styles/Home.css\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"p-home\">\r\n      <h1>Actors & Movies Gallery</h1>\r\n      <div className=\"home-image\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\nimport { BsFilm } from \"react-icons/bs\";\r\n\r\nfunction Menu({ items }) {\r\n  const [redirectTo, setRedirect] = useState();\r\n\r\n  return !redirectTo ? (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#/\">\r\n          <BsFilm />\r\n        </Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          {items.map((item) => {\r\n            return (\r\n              <Nav.Link href={`#/${item}`} >\r\n                {item}\r\n              </Nav.Link>\r\n            );\r\n          })}\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  ) : (\r\n    <Redirect to={redirectTo} />\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import \"./Styles/App.css\";\nimport Actors from \"./Pages/Actors\";\nimport Movies from \"./Pages/Movies\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Menu from \"./Components/Menu\";\n\nfunction App() {\n  return (\n    <div>\n      <Menu items={[\"Home\", \"Actors\", \"Movies\"]} />\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/actors\">\n            <Actors />\n          </Route>\n          <Route exact path=\"/movies\">\n            <Movies />\n          </Route>\n          <Route path={[\"/\", \"/home\"]}>\n            <Home />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Styles/index.css';\n\nReactDOM.render(\n  <div className=\"main\">\n    <App />\n  </div>,\n  document.getElementById('root')\n);"],"sourceRoot":""}